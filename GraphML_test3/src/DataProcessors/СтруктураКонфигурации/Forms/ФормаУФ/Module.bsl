

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПутьК_graphml = "C:\Users\roman.korotaev\Desktop\1с\тест.graphml";
	флОпределятьПодсистемы = ложь;
	
КонецПроцедуры

&НаСервере
Процедура Тест1НаСервере111()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	XML = Новый ДокументDOM;
	root = XML.createElement("http://graphml.graphdrawing.org/xmlns", "graphml");	
	root.setAttribute("http://www.yworks.com/xml/graphml",	"y:ззз", 	"Значение");
	root.setAttribute("http://www.yworks.com/xml/yed/3",	"yed:ззз", 	"Значение");
	root.setAttribute("http://www.w3.org/2001/XMLSchema-instance",	"xsi:schemaLocation", "http://graphml.graphdrawing.org/xmlns http://www.yworks.com/xml/schema/graphml/1.0/ygraphml.xsd");	
	XML.appendChild(root);
	
	ОбработкаОбъект.ЗадатьТипыДанныхXML(XML);	
	
	graph = XML.СоздатьЭлемент("graph");
	graph.УстановитьАтрибут("id", "G");
	graph.УстановитьАтрибут("edgedefault", "undirected");
	
	
	Для каждого мдСправочник Из Метаданные.Справочники Цикл
		
		ОбработкаОбъект.ДобавитьВСхему_entityRelationship(XML, graph, мдСправочник);
		
		Для каждого Влад Из мдСправочник.Владельцы Цикл			
			
			
			Если Метаданные.Справочники.Содержит(Влад) Тогда
				префикс = "спр_";
			ИначеЕсли Метаданные.Документы.Содержит(Влад) Тогда
				префикс = "док_";
			ИначеЕсли Метаданные.РегистрыНакопления.Содержит(Влад) Тогда
				префикс = "рн_";
			ИначеЕсли Метаданные.РегистрыСведений.Содержит(Влад) Тогда
				префикс = "рс_";
			ИначеЕсли Метаданные.ПланыВидовХарактеристик.Содержит(Влад) Тогда
				префикс = "пвх_";
				
				продолжить; //ПВХ выкидываем
				
			КонецЕсли;
			
			ОбработкаОбъект.ДобавитьВСхему_Edge(XML, graph, "спр_"+мдСправочник.Имя, префикс+Влад.Имя, "Владелец111");
			
		КонецЦикла; 

		
	КонецЦикла;
	
	
	XML.ЭлементДокумента.ДобавитьДочерний(graph);
	//XML.appendChild(элСправочник);
	
		
	Файл = Новый ЗаписьXML();
	Файл.ОткрытьФайл("C:\Users\roman.korotaev\Desktop\1с\тест.xml", "UTF-8");
	ФайлDOM = Новый ЗаписьDOM();	
	ФайлDOM.Записать(XML, Файл);
	Файл.Закрыть();
	
	Файл1 = Новый ЗаписьXML();
	Файл1.ОткрытьФайл("C:\Users\roman.korotaev\Desktop\1с\тест.graphml", "UTF-8");
	ФайлDOM = Новый ЗаписьDOM();	
	ФайлDOM.Записать(XML, Файл1);
	Файл1.Закрыть();

КонецПроцедуры

&НаСервере
Процедура СформироватьГрафНаСервере()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	
	XML = Новый ДокументDOM;
	root = XML.createElement("http://graphml.graphdrawing.org/xmlns", "graphml");	
	root.setAttribute("http://www.yworks.com/xml/graphml",	"y:ззз", 	"");
	root.setAttribute("http://www.yworks.com/xml/yed/3",	"yed:ззз", 	"");
	root.setAttribute("http://www.w3.org/2001/XMLSchema-instance",	"xsi:schemaLocation", "http://graphml.graphdrawing.org/xmlns http://www.yworks.com/xml/schema/graphml/1.0/ygraphml.xsd");	
	XML.appendChild(root);
	
	
	ОбработкаОбъект.ЗадатьТипыДанныхXML(XML);	
	
	graph = XML.СоздатьЭлемент("graph");
	graph.УстановитьАтрибут("id", "G");
	graph.УстановитьАтрибут("edgedefault", "undirected");
	
	
	Для каждого мдСправочник Из Метаданные.Справочники Цикл
		
		
		Если флОпределятьПодсистемы Тогда
		
			подсистемы = ПолучитьМассивПодсистемОбъектаМетаданных(мдСправочник);
			ИмяПодсистемы = "";
			Если подсистемы.Количество() > 0 Тогда			
				ИмяПодсистемы = подсистемы[0].Имя;
			КонецЕсли;
		
		КонецЕсли;
		
		//Если Метаданные.Подсистемы.Найти("СтандартныеПодсистемы") <> неопределено Тогда
		//
		//	подсистемы = ПолучитьМассивПодсистемОбъектаМетаданных(мдСправочник);
		//	
		//	Если подсистемы.Количество() > 0 Тогда			
		//		Если Метаданные.Подсистемы.СтандартныеПодсистемы.Подсистемы.Найти(подсистемы[0])<>неопределено Тогда //проверяем для простоты только один первый элемент массива
		//			Продолжить; //выкидываем стандартные подсистемы
		//		КонецЕсли;
		//	КонецЕсли;	
		//	
		//КонецЕсли;	
		
		
		
		ОбработкаОбъект.ДобавитьВСхему_entityRelationship(XML, graph, мдСправочник, ИмяПодсистемы);
		
		Для каждого Реквизит Из мдСправочник.Реквизиты Цикл			
			
			Если НЕ (Справочники.ТипВсеСсылки().СодержитТип(Реквизит.Тип.Типы()[0]) или
					Документы.ТипВсеСсылки().СодержитТип(Реквизит.Тип.Типы()[0]) ) Тогда
				Продолжить;
			КонецЕсли;
				
			
			ом = Метаданные.НайтиПоТипу(Реквизит.Тип.Типы()[0]);
			
			Если Метаданные.Справочники.Содержит(ом) Тогда
				префикс = "спр_";
			ИначеЕсли Метаданные.Документы.Содержит(ом) Тогда
				префикс = "док_";
			ИначеЕсли Метаданные.РегистрыНакопления.Содержит(ом) Тогда
				префикс = "рн_";
			ИначеЕсли Метаданные.РегистрыСведений.Содержит(ом) Тогда
				префикс = "рс_";
			ИначеЕсли Метаданные.ПланыВидовХарактеристик.Содержит(ом) Тогда
				префикс = "пвх_";
				
				продолжить; //ПВХ выкидываем
				
			КонецЕсли;
		
			ОбработкаОбъект.ДобавитьВСхему_Edge(XML, graph, "спр_"+мдСправочник.Имя, префикс+ом.Имя, Реквизит.Имя);
			
		КонецЦикла; 
		
		//Для каждого Влад Из мдСправочник.Владельцы Цикл			
		//	
		//	
		//	Если Метаданные.Справочники.Содержит(Влад) Тогда
		//		префикс = "спр_";
		//	ИначеЕсли Метаданные.Документы.Содержит(Влад) Тогда
		//		префикс = "док_";
		//	ИначеЕсли Метаданные.РегистрыНакопления.Содержит(Влад) Тогда
		//		префикс = "рн_";
		//	ИначеЕсли Метаданные.РегистрыСведений.Содержит(Влад) Тогда
		//		префикс = "рс_";
		//	ИначеЕсли Метаданные.ПланыВидовХарактеристик.Содержит(Влад) Тогда
		//		префикс = "пвх_";
		//		
		//		продолжить; //ПВХ выкидываем
		//		
		//	КонецЕсли;
		//	
		//	ДобавитьВСхему_Edge(XML, graph, "спр_"+мдСправочник.Имя, префикс+Влад.Имя, "Владелец");
		//	
		//КонецЦикла; 

		
	КонецЦикла;
	
	Для каждого мдДокумент Из Метаданные.Документы Цикл
		
		
		Если флОпределятьПодсистемы Тогда
		
			подсистемы = ПолучитьМассивПодсистемОбъектаМетаданных(мдДокумент);
			ИмяПодсистемы = "";
			Если подсистемы.Количество() > 0 Тогда			
				ИмяПодсистемы = подсистемы[0].Имя;
			КонецЕсли;
		
		КонецЕсли;	
		
		
		ОбработкаОбъект.ДобавитьВСхему_entityRelationship(XML, graph, мдДокумент, ИмяПодсистемы);
		
		Для каждого Реквизит Из мдДокумент.Реквизиты Цикл			
			
			Если НЕ (Справочники.ТипВсеСсылки().СодержитТип(Реквизит.Тип.Типы()[0]) или
					Документы.ТипВсеСсылки().СодержитТип(Реквизит.Тип.Типы()[0]) ) Тогда
				Продолжить;
			КонецЕсли;
				
			
			ом = Метаданные.НайтиПоТипу(Реквизит.Тип.Типы()[0]);
			
			Если Метаданные.Справочники.Содержит(ом) Тогда
				префикс = "спр_";
			ИначеЕсли Метаданные.Документы.Содержит(ом) Тогда
				префикс = "док_";
			ИначеЕсли Метаданные.РегистрыНакопления.Содержит(ом) Тогда
				префикс = "рн_";
			ИначеЕсли Метаданные.РегистрыСведений.Содержит(ом) Тогда
				префикс = "рс_";
			ИначеЕсли Метаданные.ПланыВидовХарактеристик.Содержит(ом) Тогда
				префикс = "пвх_";
				
				продолжить; //ПВХ выкидываем
				
			КонецЕсли;
		
			ОбработкаОбъект.ДобавитьВСхему_Edge(XML, graph, "док_"+мдДокумент.Имя, префикс+ом.Имя, Реквизит.Имя);
			
		КонецЦикла; 
				
	КонецЦикла;

	
	
	XML.ЭлементДокумента.ДобавитьДочерний(graph);
	//XML.appendChild(элСправочник);
	
	
	//ПутьК_graphml = "C:\Users\roman.korotaev\Desktop\1с\тест.graphml";
	
	Файл = Новый ЗаписьXML();
	Файл.ОткрытьФайл("C:\Users\roman.korotaev\Desktop\1с\тест.xml", "UTF-8");
	ФайлDOM = Новый ЗаписьDOM();	
	ФайлDOM.Записать(XML, Файл);
	Файл.Закрыть();
	
	Файл1 = Новый ЗаписьXML();
	Файл1.ОткрытьФайл(ПутьК_graphml);
	ФайлDOM = Новый ЗаписьDOM();	
	ФайлDOM.Записать(XML, Файл1);
	Файл1.Закрыть();

	
	
	
	
	//ЗаписьXML = Новый ЗаписьXML;
	//ЗаписьXML.УстановитьСтроку();
	//
	//ЗаписьDOM = Новый ЗаписьDOM;
	//ЗаписьDOM.Записать(XML, ЗаписьXML);

	//ТекстXML = ЗаписьXML.Закрыть();
	//	
	//ТекстХМЛ.УстановитьТекст(ТекстXML);	
	
	
	
	//ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
КонецПроцедуры


&НаСервере
Функция ПолучитьМассивПодсистемОбъектаМетаданных(ТекМетаданные, Подсистемы = "", масПодсистемы = "")
	Если масПодсистемы = "" Тогда
		масПодсистемы = Новый Массив;
	КонецЕсли;
	
	Если Подсистемы = "" Тогда
		Подсистемы = Метаданные.Подсистемы;
	КонецЕсли;
	
	Для каждого ТекПодсистема Из Подсистемы Цикл
		Если ТекПодсистема.Состав.Содержит(ТекМетаданные) Тогда
			масПодсистемы.Добавить(ТекПодсистема);
		КонецЕсли;
		
		ПолучитьМассивПодсистемОбъектаМетаданных(ТекМетаданные, ТекПодсистема.Подсистемы, масПодсистемы);
	КонецЦикла;
	
	Возврат масПодсистемы;
КонецФункции


&НаКлиенте
Процедура СформироватьГраф(Команда)
	СформироватьГрафНаСервере();
	
	
	//ВремФайл = ПолучитьИмяВременногоФайла("xml");
	//ЗаписьXML = Новый ЗаписьXML;
	//ЗаписьXML.ОткрытьФайл(ВремФайл);
	//ЗаписьXML.ЗаписатьБезОбработки(ТекстХМЛ.ПолучитьТекст());
	//ЗаписьXML.Закрыть();
	//
	//реквизит1 = ВремФайл;
	
	
	ТекстХМЛ = ПутьК_graphml;

	
КонецПроцедуры

&НаСервере
Процедура СформироватьГраф_РегистрыНаСервереERD() //ERD
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	XML = Новый ДокументDOM;
	root = XML.createElement("http://graphml.graphdrawing.org/xmlns", "graphml");	
	root.setAttribute("http://www.yworks.com/xml/graphml",	"y:ззз", 	"");
	root.setAttribute("http://www.yworks.com/xml/yed/3",	"yed:ззз", 	"");
	root.setAttribute("http://www.w3.org/2001/XMLSchema-instance",	"xsi:schemaLocation", "http://graphml.graphdrawing.org/xmlns http://www.yworks.com/xml/schema/graphml/1.0/ygraphml.xsd");	
	XML.appendChild(root);
	
	
	ОбработкаОбъект.ЗадатьТипыДанныхXML(XML);	
	
	graph = XML.СоздатьЭлемент("graph");
	graph.УстановитьАтрибут("id", "G");
	graph.УстановитьАтрибут("edgedefault", "undirected");
	
	
	атрибутыЛинииСвязиС_РН = Новый Структура;
	атрибутыЛинииСвязиС_РН.Вставить("LineStyle_color", 			"#000000");
	атрибутыЛинииСвязиС_РН.Вставить("LineStyle_type", 			"line");
	атрибутыЛинииСвязиС_РН.Вставить("LineStyle_width", 			"2.0");
	атрибутыЛинииСвязиС_РН.Вставить("Arrows_source", 			"standard");
	атрибутыЛинииСвязиС_РН.Вставить("Arrows_target", 			"none");
	атрибутыЛинииСвязиС_РН.Вставить("EdgeLabel_modelName", 		"six_pos");
	атрибутыЛинииСвязиС_РН.Вставить("EdgeLabel_modelPosition", 	"tail");
	
	Для каждого ОбъектМетаданных Из Метаданные.РегистрыНакопления Цикл
		
		
		//////Если флОпределятьПодсистемы Тогда
		//////
		//////	подсистемы = ПолучитьМассивПодсистемОбъектаМетаданных(мдСправочник);
		//////	ИмяПодсистемы = "";
		//////	Если подсистемы.Количество() > 0 Тогда			
		//////		ИмяПодсистемы = подсистемы[0].Имя;
		//////	КонецЕсли;
		//////
		//////КонецЕсли;
		
		ИмяПодсистемы = "";
		
		ОбработкаОбъект.ДобавитьВСхему_entityRelationship(XML, graph, ОбъектМетаданных, ИмяПодсистемы);
		
		
		
		МассивТипов = ОбъектМетаданных.СтандартныеРеквизиты.Регистратор.Тип.Типы();
		
		Для каждого ТипПоля Из МассивТипов Цикл
			
			ом = Метаданные.НайтиПоТипу(ТипПоля);
			префикс = ОбработкаОбъект.ВернутьПрефиксОбъектаМетаданных(ом);
			
			ОбработкаОбъект.ДобавитьВСхему_Edge(XML, graph, "рн_"+ОбъектМетаданных.Имя, префикс+ом.Имя, "(рн) "+Строка(ТипПоля), атрибутыЛинииСвязиС_РН);
			
		КонецЦикла;
		
		
		//ОбработкаОбъект.ДобавитьВСхему_entityRelationship(XML, graph, ОбъектМетаданных, ИмяПодсистемы);
		//
		//Для каждого Реквизит Из ОбъектМетаданных.Регистраторы Цикл			
		//	
		//	Если НЕ (Справочники.ТипВсеСсылки().СодержитТип(Реквизит.Тип.Типы()[0]) или
		//			Документы.ТипВсеСсылки().СодержитТип(Реквизит.Тип.Типы()[0]) ) Тогда
		//		Продолжить;
		//	КонецЕсли;
		//		
		//	
		//	ом = Метаданные.НайтиПоТипу(Реквизит.Тип.Типы()[0]);
		//	
		//	Если Метаданные.Справочники.Содержит(ом) Тогда
		//		префикс = "спр_";
		//	ИначеЕсли Метаданные.Документы.Содержит(ом) Тогда
		//		префикс = "док_";
		//	ИначеЕсли Метаданные.РегистрыНакопления.Содержит(ом) Тогда
		//		префикс = "рн_";
		//	ИначеЕсли Метаданные.РегистрыСведений.Содержит(ом) Тогда
		//		префикс = "рс_";
		//	ИначеЕсли Метаданные.ПланыВидовХарактеристик.Содержит(ом) Тогда
		//		префикс = "пвх_";
		//		
		//		продолжить; //ПВХ выкидываем
		//		
		//	КонецЕсли;
		//
		//	ОбработкаОбъект.ДобавитьВСхему_Edge(XML, graph, "спр_"+мдСправочник.Имя, префикс+ом.Имя, Реквизит.Имя);
		//	
		//КонецЦикла; 
		
	КонецЦикла;
	
	
	Для каждого мдДокумент Из Метаданные.Документы Цикл
		
		
		//Если флОпределятьПодсистемы Тогда
		//
		//	подсистемы = ПолучитьМассивПодсистемОбъектаМетаданных(мдДокумент);
		//	ИмяПодсистемы = "";
		//	Если подсистемы.Количество() > 0 Тогда			
		//		ИмяПодсистемы = подсистемы[0].Имя;
		//	КонецЕсли;
		//
		//КонецЕсли;	
		
		
		ОбработкаОбъект.ДобавитьВСхему_entityRelationship(XML, graph, мдДокумент, ИмяПодсистемы);
		
		//Для каждого Реквизит Из мдДокумент.Реквизиты Цикл			
		//	
		//	Если НЕ (Справочники.ТипВсеСсылки().СодержитТип(Реквизит.Тип.Типы()[0]) или
		//			Документы.ТипВсеСсылки().СодержитТип(Реквизит.Тип.Типы()[0]) ) Тогда
		//		Продолжить;
		//	КонецЕсли;
		//		
		//	
		//	ом = Метаданные.НайтиПоТипу(Реквизит.Тип.Типы()[0]);
		//	
		//	Если Метаданные.Справочники.Содержит(ом) Тогда
		//		префикс = "спр_";
		//	ИначеЕсли Метаданные.Документы.Содержит(ом) Тогда
		//		префикс = "док_";
		//	ИначеЕсли Метаданные.РегистрыНакопления.Содержит(ом) Тогда
		//		префикс = "рн_";
		//	ИначеЕсли Метаданные.РегистрыСведений.Содержит(ом) Тогда
		//		префикс = "рс_";
		//	ИначеЕсли Метаданные.ПланыВидовХарактеристик.Содержит(ом) Тогда
		//		префикс = "пвх_";
		//		
		//		продолжить; //ПВХ выкидываем
		//		
		//	КонецЕсли;
		//
		//	ОбработкаОбъект.ДобавитьВСхему_Edge(XML, graph, "док_"+мдДокумент.Имя, префикс+ом.Имя, Реквизит.Имя);
		//	
		//КонецЦикла; 
				
	КонецЦикла;
	
	XML.ЭлементДокумента.ДобавитьДочерний(graph);
	
	
	Файл = Новый ЗаписьXML();
	Файл.ОткрытьФайл("C:\Users\roman.korotaev\Desktop\1с\тест.xml", "UTF-8");
	ФайлDOM = Новый ЗаписьDOM();	
	ФайлDOM.Записать(XML, Файл);
	Файл.Закрыть();
	
	Файл1 = Новый ЗаписьXML();
	Файл1.ОткрытьФайл(ПутьК_graphml);
	ФайлDOM = Новый ЗаписьDOM();	
	ФайлDOM.Записать(XML, Файл1);
	Файл1.Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьГраф_РегистрыНаСервереBPMN() //BPMN
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	XML = Новый ДокументDOM;
	root = XML.createElement("http://graphml.graphdrawing.org/xmlns", "graphml");	
	root.setAttribute("http://www.yworks.com/xml/graphml",	"y:ззз", 	"");
	root.setAttribute("http://www.yworks.com/xml/yed/3",	"yed:ззз", 	"");
	root.setAttribute("http://www.w3.org/2001/XMLSchema-instance",	"xsi:schemaLocation", "http://graphml.graphdrawing.org/xmlns http://www.yworks.com/xml/schema/graphml/1.0/ygraphml.xsd");	
	XML.appendChild(root);
	
	
	ОбработкаОбъект.ЗадатьТипыДанныхXML(XML);	
	
	graph = XML.СоздатьЭлемент("graph");
	graph.УстановитьАтрибут("id", "G");
	graph.УстановитьАтрибут("edgedefault", "undirected");
	
	
	атрибутыЛинииСвязиС_РН = Новый Структура;
	атрибутыЛинииСвязиС_РН.Вставить("LineStyle_color", 			"#000000");
	атрибутыЛинииСвязиС_РН.Вставить("LineStyle_type", 			"line");
	атрибутыЛинииСвязиС_РН.Вставить("LineStyle_width", 			"2.0");
	атрибутыЛинииСвязиС_РН.Вставить("Arrows_source", 			"standard");
	атрибутыЛинииСвязиС_РН.Вставить("Arrows_target", 			"none");
	атрибутыЛинииСвязиС_РН.Вставить("EdgeLabel_modelName", 		"six_pos");
	атрибутыЛинииСвязиС_РН.Вставить("EdgeLabel_modelPosition", 	"tail");
	
	
	
	// --------------------------------------------------- Регистры сведений ------------------------------------------
	
	Для каждого ОбъектМетаданных Из Метаданные.РегистрыСведений Цикл
		
		
		//////Если флОпределятьПодсистемы Тогда
		//////
		//////	подсистемы = ПолучитьМассивПодсистемОбъектаМетаданных(мдСправочник);
		//////	ИмяПодсистемы = "";
		//////	Если подсистемы.Количество() > 0 Тогда			
		//////		ИмяПодсистемы = подсистемы[0].Имя;
		//////	КонецЕсли;
		//////
		//////КонецЕсли;
		
		ИмяПодсистемы = "";
		
		ОбработкаОбъект.ДобавитьВСхему_bpmnArtifact(XML, graph, ОбъектМетаданных, ИмяПодсистемы);
		
		Попытка
			регистраторРС = ОбъектМетаданных.СтандартныеРеквизиты.Регистратор;						
		Исключение			
			регистраторРС = Неопределено;			
		КонецПопытки;
		
		Если регистраторРС <> Неопределено Тогда
		
			МассивТипов = регистраторРС.Тип.Типы();
			
			Для каждого ТипПоля Из МассивТипов Цикл
				
				ом = Метаданные.НайтиПоТипу(ТипПоля);
				префикс = ОбработкаОбъект.ВернутьПрефиксОбъектаМетаданных(ом);
				
				ОбработкаОбъект.ДобавитьВСхему_Edge(XML, graph, "рс_"+ОбъектМетаданных.Имя, префикс+ом.Имя, "", атрибутыЛинииСвязиС_РН);
				
			КонецЦикла;
			
		КонецЕсли;
					
	КонецЦикла;

	
	
	// --------------------------------------------------- Регистры накопления ------------------------------------------
	
	Для каждого ОбъектМетаданных Из Метаданные.РегистрыНакопления Цикл
		
		
		//////Если флОпределятьПодсистемы Тогда
		//////
		//////	подсистемы = ПолучитьМассивПодсистемОбъектаМетаданных(мдСправочник);
		//////	ИмяПодсистемы = "";
		//////	Если подсистемы.Количество() > 0 Тогда			
		//////		ИмяПодсистемы = подсистемы[0].Имя;
		//////	КонецЕсли;
		//////
		//////КонецЕсли;
		
		ИмяПодсистемы = "";
		
		ОбработкаОбъект.ДобавитьВСхему_bpmnArtifact(XML, graph, ОбъектМетаданных, ИмяПодсистемы);
		
		
		
		МассивТипов = ОбъектМетаданных.СтандартныеРеквизиты.Регистратор.Тип.Типы();
		
		Для каждого ТипПоля Из МассивТипов Цикл
			
			ом = Метаданные.НайтиПоТипу(ТипПоля);
			префикс = ОбработкаОбъект.ВернутьПрефиксОбъектаМетаданных(ом);
			
			ОбработкаОбъект.ДобавитьВСхему_Edge(XML, graph, "рн_"+ОбъектМетаданных.Имя, префикс+ом.Имя, "", атрибутыЛинииСвязиС_РН);
			
		КонецЦикла;
					
	КонецЦикла;
	
	
	// --------------------------------------------------- Регистры бухгалтерии ------------------------------------------
	
	Для каждого ОбъектМетаданных Из Метаданные.РегистрыБухгалтерии Цикл
		
		
		//////Если флОпределятьПодсистемы Тогда
		//////
		//////	подсистемы = ПолучитьМассивПодсистемОбъектаМетаданных(мдСправочник);
		//////	ИмяПодсистемы = "";
		//////	Если подсистемы.Количество() > 0 Тогда			
		//////		ИмяПодсистемы = подсистемы[0].Имя;
		//////	КонецЕсли;
		//////
		//////КонецЕсли;
		
		ИмяПодсистемы = "";
		
		ОбработкаОбъект.ДобавитьВСхему_bpmnArtifact(XML, graph, ОбъектМетаданных, ИмяПодсистемы);
		
		
		
		МассивТипов = ОбъектМетаданных.СтандартныеРеквизиты.Регистратор.Тип.Типы();
		
		Для каждого ТипПоля Из МассивТипов Цикл
			
			ом = Метаданные.НайтиПоТипу(ТипПоля);
			префикс = ОбработкаОбъект.ВернутьПрефиксОбъектаМетаданных(ом);
			
			ОбработкаОбъект.ДобавитьВСхему_Edge(XML, graph, "рб_"+ОбъектМетаданных.Имя, префикс+ом.Имя, "", атрибутыЛинииСвязиС_РН);
			
		КонецЦикла;
					
	КонецЦикла;
	
	
	Для каждого мдДокумент Из Метаданные.Документы Цикл
				
		Если флОпределятьПодсистемы Тогда
		
			подсистемы = ПолучитьМассивПодсистемОбъектаМетаданных(мдДокумент);
			ИмяПодсистемы = "";
			Если подсистемы.Количество() > 0 Тогда			
				ИмяПодсистемы = подсистемы[0].Имя;
			КонецЕсли;
		
		КонецЕсли;			
		
		ОбработкаОбъект.ДобавитьВСхему_bpmnArtifact(XML, graph, мдДокумент, ИмяПодсистемы);
						
	КонецЦикла;
	
	XML.ЭлементДокумента.ДобавитьДочерний(graph);
	
	
	Файл = Новый ЗаписьXML();
	Файл.ОткрытьФайл("C:\Users\roman.korotaev\Desktop\1с\тест.xml", "UTF-8");
	ФайлDOM = Новый ЗаписьDOM();	
	ФайлDOM.Записать(XML, Файл);
	Файл.Закрыть();
	
	Файл1 = Новый ЗаписьXML();
	Файл1.ОткрытьФайл(ПутьК_graphml);
	ФайлDOM = Новый ЗаписьDOM();	
	ФайлDOM.Записать(XML, Файл1);
	Файл1.Закрыть();
	
КонецПроцедуры



&НаКлиенте
Процедура СформироватьГраф_Регистры(Команда)
	//СформироватьГраф_РегистрыНаСервереERD();
	СформироватьГраф_РегистрыНаСервереBPMN();
	ТекстХМЛ = ПутьК_graphml;
КонецПроцедуры



&НаСервере
Процедура СформироватьДеревоПодсистемНаСервере()
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ДеревоПодсистемИОбъектов = ОбработкаОбъект.ПолучитьСоставПодсистем();
	
	//объект.ДеревоПодсистемИОбъектов.Загрузить();
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьДеревоПодсистем(Команда)
	СформироватьДеревоПодсистемНаСервере();
КонецПроцедуры


//лвыплдытмол

